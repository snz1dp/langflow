{
  "Loading...": "加载中...",
  "Basic Components": "基础组件",
  "Advanced": "高级组件",
  "Building...": "编译中...",
  "Saving...": "保存中...",
  "Save": "保存",
  "Saved": "已保存",
  "Inputs": "输入",
  "Outputs": "输出",
  "Prompts": "提示",
  "Data": "数据",
  "Models": "大模型",
  "Helpers": "辅助",
  "Vector Stores": "向量存储",
  "Vector Search": "向量搜索",
  "Embeddings": "词嵌入",
  "Agents": "助手",
  "Chains": "链",
  "Experimental": "实验性",
  "Utilities": "实用工具",
  "Memories": "记忆体",
  "Question": "问题",
  "Model Specs": "模型规格",
  "Retrievers": "检索器",
  "Finish Editing": "完成编辑",
  "Text Splitters": "文本分割",
  "Toolkits": "工具包",
  "Tools": "其他工具",
  "Other": "其他",
  "Search": "搜索",
  "Search Flows": "搜索流程",
  "Search Components": "搜索组件",
  "Search Flows and Components": "搜索流程和组件",
  "Folders": "目录",
  "My Collection": "我的",
  "Manage your personal projects. Download and upload entire collections.": "个人项目及组件上传下载。",
  "My Projects": "我的项目",
  "New Project": "新建项目",
  "All": "全部",
  "Flows": "流程",
  "Components": "组件",
  "Max Chunk Size": "最大块大小",
  "Recursive": "递归",
  "Text | Record": "文本 | 记录",
  "TextOutput": "文本输出",
  "The number of results per select statement to return.": "每个选择语句返回的结果数。",
  "MistralModel": "MistralAI平台",
  "AmazonBedrockModel": "亚马逊Bedrock平台",
  "AzureOpenAIModel": "Azure OpenAI代理",
  "CohereModel": "Cohere平台",
  "BaiduQianfanChatModel": "百度千帆",
  "HuggingFaceModel": "Hugging Face API",
  "GoogleGenerativeAIModel": "Google Generative AI平台",
  "OllamaModel": "羊驼Ollama",
  "GroqModel": "Groq平台",
  "VertexAiModel": "VertexAI平台",
  "Anthropic Model": "平台",
  "Private": "私有",
  "Select All": "全选",
  "Downloads": "下载数",
  "Likes": "喜欢数",
  "Unselect All": "取消",
  "Delete selected items": "删除选中条目",
  "Duplicate selected items": "复制选中条目",
  "Export selected items": "导出选中条目",
  "Store": "仓库",
  "Store API Key": "仓库密钥",
  "Langflow Store": "流程仓库",
  "Explore community-shared flows and components.": "探索社区共享的流程和组件。",
  "API Key": "密钥",
  "Rows per page": "每页行数",
  "Go to first page": "首页",
  "PageStart": "第",
  "PageEnd": "页",
  "Go to previous page": "上一页",
  "Go to next page": "下一页",
  "Go to last page": "尾页",
  "Bundles": "合集",
  "Created By Me": "我创建的",
  "Liked By Me": "我喜欢的",
  "Filter Values": "筛选值",
  "Popular": "热门",
  "Alphabetical": "字母排序",
  "There are no": "无",
  "You haven't": "您还没有",
  "anything with the selected filters yet.": "符合筛选条件的内容。",
  "created": "创建的",
  "liked": "喜欢的",
  "with the selected filters.": "",
  "results": "条",
  "result": "条",
  "Agent": "助手",
  "Memory": "记忆体",
  "Chain": "链",
  "Vector Store": "向量存储",
  "Prompt": "提示词",
  "Error getting components.": "获取组件失败。",

  "There is no ChatOutput Component in the flow." : "流程中没有ChatOutput组件。",

  "Warning: Critical data, JSON file may include API keys.": "警告：关键数据，JSON文件可能包含API密钥。",

  "API Key copied!": "密钥已复制！",

  "Code is ready to run": "代码已准备好运行",

  "Success! Your API Key has been saved.": "您的API密钥已保存成功！",

  "API Key Error": "密钥错误",
  "Notifications": "通知",
  "No new notifications": "暂无新通知",
  "Built sucessfully ✨": "构建成功 ✨",
  "General": "通用",
  "Settings": "设置",
  "Admin Page": "管理页面",
  "Sign Out": "注销",
  "Playground": "沙盒",
  "API": "API",
  "Retry": "重试",
  "Share": "分享",
  "Set up the input variables defined in prompt templates. Interact with agents and chains.": "在提示词模板中设置定义的输入变量，然后与助手进行交互验证。",
  "by <b>{{username}}</b>": "由{{username}}创建",
  "Default Session": "缺省会话",
  "Select an IO component to view": "选择一个输入输出组件进行查看",
  "Send a message...": "发送消息",
  "Enter text...": "输入文本...",
  "Start a conversation and click the agent's memories": "开始对话并点击助手",
  "Your component is outdated. Click to update (data may be lost)": "您的组件已过时，点击更新（数据可能丢失）",
  "to inspect previous messages.": "观察链处理细节",
  "User": "用户",
  "instructions": "指令",
  "Sign in to Langflow": "系统登录",
  "Don't have an account?": "没有账户？",
  "Incorrect username or password": "用户名或密码错误",
  "Sign Up": "注册",
  "references": "参考",
  "Please enter your password": "请输入密码",
  "source": "源",
  "title": "标题",
  "description": "描述",
  "language": "语言",
  "Machine": "机器",
  "Bot": "机器人",
  "Session deleted successfully.": "会话删除成功",
  "Error deleting Session.": "删除会话失败",
  "Langflow Chat": "对话验证",
  "Thinking...": "发送中...",
  "Sorry, we found an unexpected error!": "发现了内部错误",
  "Restart Langflow": "刷新页面",
  "Report on GitHub": "报告错误",
  "Please report errors with detailed tracebacks on the": "请在",
  "GitHub Issues": "GitHub问题跟踪页",
  "page.": "上报告错误详情，",
  "Thank you!": "谢谢您!",
  "Running components": "运行组件",
  "Code": "代码",
  "Advanced Settings": "高级设置",
  "Minimize": "最小化",
  "Expand": "展开",
  "Freeze": "冻结",
  "Duplicate": "克隆",
  "Copy": "复制",
  "Docs": "文档",
  "This folder is empty. New?": "当前目录为空",
  "Start Here": "新建",
  "New": "新建",
  "Logs": "日志",
  "Import": "导入",
  "Export": "导出",
  "Undo": "撤销",
  "Redo": "重做",
  "Options": "选项",
  "No chat input variables found. Click to run your flow.": "无需对话输入，直接点击运行",
  "Instructions": "指令",
  "Get Started": "开始",
  "Select a template below": "请选择下面的模板",
  "Basic Prompting (Hello, World)": "基础模板 (Hello, World)",
  "Blog Writer": "博客写作",
  "Memory Chatbot": "记忆对话",
  "API requests": "API请求",
  "Document QA": "文档问答",
  "Vector Store RAG": "向量存储检索增强生成",
  "Blank Flow": "空白流程",
  "Help": "帮助",
  "Discussions": "讨论",
  "Global Variables": "全局变量",
  "Langflow API": "服务接口",
  "Shortcuts": "快捷方式",
  "Messages": "消息",
  "Manage the general settings for Langflow.": "系统通用设置",
  "Manage settings related to Langflow and your account.": "系统和账户相关设置",
  "Profile Picture": "头像",
  "Choose the image that appears as your profile picture.": "选择您的头像",
  "People": "人像",
  "Space": "空间",
  "Please enter your API Key": "请输入您的密钥",
  "Insert your API Key": "输入您的密钥",
  "Your API key is not valid. ": "您的密钥无效",
  "You don't have an API key.": "您还没有密钥",
  "Insert your Langflow API key.": "输入您的接口密钥",
  "Don’t have an API key? Sign up at": "没有密钥？请去",
  "langflow.store": "langflow.store注册",
  "Build to validate status.": "构建以验证状态。",
  "Execution blocked": "执行被阻止",
  "Last saved at ": "最后保存于",
  "Last Run: ": "最后运行：",
  "Manage global variables and assign them to fields.": "全局变量与字段配置",
  "No Data Available": "暂无数据",
  "No data available": "暂无数据",
  "Search filters...": "搜索过滤...",
  "Select filter...": "选择过滤...",
  "Oops! It seems there's no data to display right now. Please check back later.": "抱歉，当前没有数据可供显示，请稍后再试。",
  "Add New": "添加",
  "Please ensure your file has one of the following extensions:": "请确保您的文件扩展名为以下之一：",
  "This flow doesn't have a playground.": "此流程没有验证工具。",
  "Error creating variable": "创建变量出错",
  "An unexpected error occurred while adding a new variable. Please try again.": "添加新变量时发生了意外错误，请重试。",
  "Components reloaded successfully": "组件重新加载成功",
  "Error deleting variable": "删除变量出错",
  "ID not found for variable: ": "未找到变量ID：",
  "Folder updated successfully.": "目录更新成功。",
  "Error updating folder.": "更新目录失败。",
  "Folder created successfully.": "目录创建成功。",
  "Error creating folder.": "创建目录失败。",
  " Components with errors: ": " 组件错误：",
  "No items selected": "未选中任何条目",
  "Please select items to delete": "请选择要删除的条目",
  "API key saved successfully": "API密钥保存成功",
  "API key save error": "API密钥保存错误",
  "Messages updated successfully.": "消息更新成功。",
  "Error updating messages.": "更新消息失败。",
  "This variable will be encrypted and will be available for you to use in any of your projects.": "此变量将被加密，您可以在任何项目中使用。",
  "Variable Name": "变量名",
  "Error uploading file": "上传文件失败",
  "Type (optional)": "类型（可选）",
  "Value": "值",
  "Insert a name for the variable...": "请输入变量名...",
  "Choose a type for the variable...": "选择变量类型...",
  "Insert a value for the variable...": "请输入变量值...",
  "Choose a field for the variable...": "选择变量字段...",
  "Save Variable": "保存变量",
  "Search options...": "搜索可选项...",
  "Apply To Fields (optional)": "应用字段（可选）",
  "Create Variable": "创建变量",
  "Cancel": "取消",
  "Confirm": "确认",
  "Your secret API keys are listed below. Do not share your API key with others, or expose it in the browser or other client-side code.": "您的密钥如下，不要分享给他人，也不要在浏览器或其他客户端代码中暴露。",
  "Untitled": "未命名",
  "Never": "从未",
  "Name": "名称",
  "Key": "密钥",
  "Total Uses": "总使用次数",
  "Created": "创建时间",
  "Last Used": "最后使用时间",
  "View Text": "查看文本",
  "Close": "关闭",
  "Choose an option": "选择一个选项",
  "OpenAPI Agent": "OpenAPI助手",
  "OpenAPIAgent": "OpenAPI助手",
  "Agent to interact with OpenAPI API.": "与OpenAPI交互的助手。",
  "File Path": "文件路径",
  "Allow Dangerous Requests": "允许风险请求",
  "Max Iterations": "最大迭代次数",
  "OpenAI Tools Agent": "OpenAI工具助手",
  "OpenAIToolsAgent": "OpenAI工具助手",
  "Agent that uses tools via openai-tools.": "通过openai-tools使用工具的助手。",
  "Create API Key": "创建密钥",
  "Insert a name for your API Key": "请输入密钥名称",
  "Create a secret API Key to use Langflow API.": "创建一个密钥用于访问服务接口",
  "Create Secret Key": "创建密钥",
  "Done": "好的",
  "Please save this secret key somewhere safe and accessible. For security reasons,": "请妥善保存此密钥，为了安全起见，",
  "you won't be able to view it again": "您将无法再次查看",
  "through your account. If you lose this secret key, you'll need to generate a new one.": "此密钥。如果丢失，您需要重新生成。",
  "Apply To Fields": "应用字段",
  "Type": "类型",
  "Select items to export": "选择要导出的条目",
  "Select items to duplicate": "选择要复制的条目",
  "Select items to delete": "选择要删除的条目",
  "Manage Shortcuts for quick access to frequently used actions.": "快捷方式以便快速访问常用操作。",
  "Restore": "恢复",
  "Functionality": "功能",
  "Keyboard Shortcut": "快捷键",
  "Error parsing message": "解析消息出错",
  "Error": "错误",
  "Key Combination": "组合键",
  "Reset": "重置",
  "Apply": "应用",
  "Recording your keyboard": "录制您的键盘",
  "Component Share": "组件分享",
  "Delete": "删除",
  "Open playground": "打开验证",
  "Group": "分组",
  "Cut": "剪切",
  "Paste": "粘贴",
  "Download": "下载",
  "Please review your API key.": "请检查您的API密钥。",
  "Like": "喜欢",
  "Update": "更新",
  "Flow Share": "流程分享",
  "Play": "运行",
  "Output Inspection": "输出检查",
  "Inspect, edit and remove messages to explore and refine model behaviors.": "检查、编辑和删除消息以探索和优化模型行为。",
  "Are you sure you want to delete the selected": "你确定要删除选中的",
  "folder": "目录",
  "JSONCleaner": "JSON清理",
  "JSON Cleaner": "JSON清理",
  "Cleans the messy and sometimes incorrect JSON strings produced by LLMs so that they are fully compliant with the JSON spec.": "清理混乱且有时不正确的JSON字符串，使其完全符合JSON规范。",
  "JSON String": "JSON",
  "Remove Control Characters": "删除控制字符",
  "The JSON string to be cleaned.": "要清理的JSON字符串。",
  "Remove control characters from the JSON string.": "从JSON字符串中删除控制字符。",
  "Normalize Unicode": "转换Unicode",
  "Normalize Unicode characters in the JSON string.": "转换JSON字符串中的Unicode字符。",
  "Validate JSON": "校验",
  "Milvus": "Milvus向量库",
  "Milvus vector store with search capabilities": "支持搜索的Milvus向量库。",
  "Collection Description": "集合描述",
  "Connection Password": "连接密码",
  "Connection URI": "连接地址",
  "Primary Field Name": "主键字段",
  "Text Field Name": "文本字段",
  "Vector Field Name": "向量字段",
  "Validate the JSON string to ensure it is well-formed.": "验证JSON字符串以确保其格式正确。",
  "Note: This action is irreversible.": "注意：此操作不可逆。",
  "Deleting the selected folder will remove all associated flows and components.": "删除选中的目录将删除所有关联的流程和组件。",
  "Folder deleted successfully.": "目录删除成功!",
  "Other Connection Arguments": "其他连接参数",
  "Consistencey Level": "一致性级别",
  "Drop Old Collection": "删除旧集合",
  "Index Parameters": "索引参数",
  "Ignore this field if no password is required to make connection.": "如果不需要密码连接，请忽略此字段。",
  "Search Parameters": "搜索参数",
  "Error deleting folder.": "删除目录失败!",
  "New Folder": "新建目录",
  "Uploaded successfully": "上传成功!",
  "{{name}} uploaded successfully": "{{name}}上传成功!",
  "Drag your {{name}} here": "拖拽${name}到这里",
  "Error on upload": "上传失败!",
  "Extracted Chunks": "提取块",
  "Empty": "无",
  "Generate the code to integrate your flow into an external application.": "生成代码以集成到外部应用程序。",
  "Run cURL": "cURL调用",
  "Python API": "Python接口",
  "JS API": "JS接口",
  "Python Code": "Python代码",
  "Chat Widget HTML": "HTML对话",
  "Tweaks": "调整",
  "Insert this code anywhere in your &lt;body&gt; tag. To use with react and other libs, check our <a class='link-color' href='https://langflow.org/guidelines/widget'>documentation</a>.": "将此代码插入到&lt;body&gt;标签中的任何位置。要与其他前端库一起使用，请查看<a href='https://langflow.org/guidelines/widget' target='_blank'>文档</a>",
  "PARAM": "参数",
  "VALUE": "值",
  "Edit Code": "编辑代码",
  "Edit your Python code snippet. Refer to the Langflow documentation for more information on how to write your own component.": "编辑Python代码片段。有关如何编写自己的组件的更多信息，请参考Langflow文档。",
  "Check & Save": "检查并保存",
  "Type something...": "请输入内容...",
  "item": "条目",
  "Edit Dictionary": "编辑字典",
  "View Dictionary": "查看字典",
  "Customize your dictionary, adding or editing key-value pairs as needed. Supports adding new objects {} or arrays [].": "自定义字典，根据需要添加或编辑键值对。支持添加新对象{}或数组[]。",
  "Click to edit your dictionary...": "点击编辑字典...",
  "Enter a value between": "输入值范围",
  "and": "与",
  "No parameters are available for display.": "无可用参数显示。",
  "Type an integer number": "请输入整数",
  "Integer number": "整数",
  "Edit Prompt": "编辑提示词",
  "Type your prompt here...": "请输入提示词...",
  "Prompt variables can be created with any chosen name inside curly brackets, e.g. ": "提示词变量可以用任何名称放在大花括号中，如",
  "Prompt Variables": "提示词变量",
  "Edit text content.": "编辑文本内容。",
  "Create your prompt. Prompts can help guide the behavior of a Language Model. Use curly brackets {} to introduce variables.": "创建您的提示词，提示词可以帮助引导语言模型的行为，使用大花括号{}引入变量。",
  "Type message here.": "请输入消息。",
  "Choose an option...": "选择一个选项...",
  "No file": "无文件",
  "Set workflow status to public": "设置流程状态为公开",
  "Set component status to public": "设置组件状态为公开",
  "Attention": "注意",
  "API keys in specified fields are automatically removed upon sharing.": "指定字段中的密钥在分享时会自动删除。",
  "Publish workflow to the Langflow Store.": "发布流程到仓库。",
  "Publish component to the Langflow Store.": "发布组件到仓库。",
  "Character limit reached": "字符数已达上限",
  "Invalid name": "无效名称",
  "Description": "描述",
  "(optional)": "(可选)",
  "No description": "无",
  "An alternative name to run the endpoint": "运行端点的替代名称",
  "Customize workspace settings and preferences.": "自定义工作区设置和偏好。",
  "Endpoint Name": "端点名称",
  "Refresh All": "全部刷新",
  "Stop": "停止",
  "Inspect component executions.": "检查组件执行。",
  "Export flow as JSON file": "导出流程为JSON文件",
  "Save with my API keys": "保存我的密钥",
  "Edit Text": "编辑文本",
  "Avaliable input components:": "可用的输入组件：",
  "Avaliable output components:" : "可用的输出组件：",
  "Caution: Unchecking this box only removes API keys from fields specifically designated for API keys.": "注意：取消此选项仅从专门用于API密钥的字段中删除API密钥。",
  "items": "条目",
  "Interact with your AI. Monitor inputs, outputs and memories.": "与您的AI进行互动。监控输入、输出和记忆。",
  "Error pasting components": "添加组件失败",
  "You can only have one ChatInput component in the flow": "流程中只能有一个ChatInput组件",
  "Couldn't establish a connection.": "无法建立连接。",
  "Error deleting global variables.": "删除全局变量失败。",
  "Error liking {{name}}.": "标记{{name}}为我的喜欢失败。",
  "Check if everything is working properly and try again.": "检查本地网络或服务端是否正常，然后重试。",
  "Details": "详情",
  "Components created before Langflow 1.0 may be unstable. Ensure components are up to date.": "在版本1.0之前创建的组件可能不稳定，请确保组件是最新的。",
  "Unload interval": "卸载间隔",
  "List of tokens to signal the model to stop generating text.": "文本生成停止的标记列表。",
  "Tags to add to the run trace.": "添加到运行跟踪的标签。",
  "Specify the format of the output (e.g., json)": "指定输出格式（例如，json）",
  "How long the model will stay loaded into memory.": "模型在内存中保持的时间。",
  "interval": "存活时间",
  "Please contact the developer of the component to fix this issue.": "请联系组件开发者解决此问题。",
  "The component {{name}} has no template.": "组件{{name}}没有模板。",
  "{{shortcut}} shortcut successfully changed": "{{shortcut}}快捷键修改成功",
  "Error saving key combination": "保存组合键出错",
  "This combination already exists!": "此组合键已存在！",
  "The component": "组件",
  "has no template.": "无模板。",
  "Error updating Compoenent code": "更新组件代码失败",
  "There was an error updating the Component.": "更新组件时出现错误。",
  "If the error persists, please report it on our Discord or GitHub.": "如果错误一直存在，请在Discord或GitHub上报告。",
  "Double Click to Edit Description": "双击编辑描述",
  "Error while updating the Component": "更新组件时出现错误",
  "An unexpected error occurred while updating the Component. Please try again.": "更新组件时发生了意外错误，请稍后重试。",
  "Please build your flow": "请先构建流程",
  "There was an error downloading your image": "下载图片时出误",
  "Could not load flows from database": "无法从数据库加载流程",
  "An unexpected error occurred, please try again": "发生了意外错误，请稍后重试",
  "You cannot upload a component as a flow or vice versa": "您不能将组件上传为流程或反之也不行",
  "built successfully": "构建成功",
  "successfully overridden!": "成功覆盖！",
  "Selected items deleted successfully": "选中条目删除成功",
  "Error deleting items": "删除条目出错",
  "Please try again": "请稍候重试",
  "Astra DB Chat Memory": "Astra DB对话记忆",
  "Retrieves and store chat messages from Astra DB.": "从Astra DB检索和存储对话消息。",
  "New node successfully saved!": "新节点保存成功！",
  "Cassandra Chat Memory": "Cassandra对话记忆",
  "Retrieves and store chat messages from Apache Cassandra.": "从Apache Cassandra检索和存储对话消息。",
  "Zep Chat Memory": "Zep对话记忆",
  "Retrieves and store chat messages from Zep.": "从Zep检索和存储对话消息。",
  "Save Changes": "保存",
  "Field Name": "字段名",
  "Show": "可见",
  "Maritalk": "Maritalk平台",
  "NVIDIA Rerank": "NVIDIA Rerank平台",
  "NVIDIA": "NVIDIA平台",
  "NVIDIAModelComponent": "NVIDIA平台",
  "OpenAIModel": "OpenAI平台",
  "AnthropicModel": "Anthropic平台",
  "SequentialCrewComponent": "SequentialCrew平台",
  "HierarchicalCrewComponent": "HierarchicalCrew平台",
  "RetrievalQA": "检索问答",
  "Hierarchical Task": "多级任务",
  "Each task must have a description, an expected output and an agent responsible for execution.": "每个任务必须有描述、预期输出和负责执行的助手。",
  "List of tools/resources limited for task execution. Uses the Agent tools by default.": "任务执行所需的工具/资源列表。默认使用助手工具。",
  "Expected Output": "预期输出",
  "Clear definition of expected task outcome.": "清晰定义预期任务结果。",
  "Descriptive text detailing task's purpose and execution.": "详细描述任务的目的和执行。",
  "Sequential Task": "顺序任务",
  "Async Execution": "异步执行",
  "CrewAI Agent that will perform the task": "执行任务的CrewAI助手",
  "CrewAI Task that will perform the task": "执行任务的CrewAI任务",
  "CrewAI Agent": "CrewAI助手",
  "Represents an agent of CrewAI.": "CrewAI助手。",
  "Language model that will run the agent.": "运行助手的语言模型。",
  "Tools at agents disposal": "助手可用工具",
  "Allow Code Execution": "允许代码执行",
  "Whether the agent is allowed to execute code.": "是否允许助手执行代码。",
  "Allow Delegation": "允许委托",
  "Whether the agent is allowed to delegate tasks to other agents.": "是否允许助手将任务委托给其他助手。",
  "Backstory": "背景",
  "Goal": "目标",
  "The objective of the agent.": "助手目标。",
  "kwargs": "参数",
  "kwargs of agent.": "助手参数。",
  "Whether the agent should have memory or not": "助手是否应该有记忆",
  "Role": "角色",
  "The role of the agent.": "助手角色。",
  "Hierarchical Crew": "多级Crew助手",
  "Sequential Crew": "顺序Crew助手",
  "SequentialTaskComponent": "顺序任务",
  "CrewAIAgentComponent": "CrewAI助手",
  "HierarchicalTaskComponent": "多级任务",
  "Represents a group of agents, defining how they should collaborate and the tasks they should perform.": "代表一组助手，定义了它们应该如何协作以及应该执行的任务。",
  "Tasks": "任务",
  "Manager LLM": "管理大模型",
  "Manager Agent": "管理助手",
  "Function Calling LLM": "函数调用模型",
  "Max RPM": "最大RPM",
  "Share Crew": "共享Crew",
  "Flow Tool": "流程工具",
  "The backstory of the agent.": "助手背景。",
  "Boolean flag indicating asynchronous task execution.": "是否异步任务执行标志。",
  "Generates text using NVIDIA LLMs.": "使用NVIDIA LLMs生成文本。",
  "Rerank documents using the NVIDIA API and a retriever.": "使用NVIDIA API和检索器对文档进行重新排序。",
  "The base URL of the NVIDIA API. Defaults to https://integrate.api.nvidia.com/v1.": "NVIDIA API接口地址，默认为https://integrate.api.nvidia.com/v1。",
  "Generates text using Maritalk LLMs.": "使用Maritalk LLMs生成文本。",
  "The Maritalk API Key to use for the OpenAI model.": "用于模型访问的Maritalk API密钥。",
  "Maritalk API Key": "API密钥",
  "Component Output": "组件输出",
  "text": "文本",
  "sender": "发送者",
  "sender_name": "发送者名称",
  "session_id": "会话ID",
  "files": "文件",
  "timestamp": "时间戳",
  "flow_id": "流程ID",
  "id": "ID",
  "Inspect the output of the component below.": "查看组件输出。",
  "Output can't be displayed": "无法显示输出",
  "Inspect Output": "查看输出",
  "Please build the component first": "请先构建组件",
  "Use the playground to interact with components that stream data": "使用验证工具与流数据的组件交互",
  "NO OUTPUT": "无输出",
  "Streaming is not supported": "不支持流式传输",
  "No input message provided.": "未提供输入消息。",
  "Messages deleted successfully.": "消息删除成功。",
  "Error deleting messages.": "删除消息失败。",
  "Reset Columns": "重置",
  "{{name}} {{action}} Successfully.": "{{name}}{{action}}成功。",
  "Downloaded": "下载",
  "Installed": "安装",
  "downloading": "下载",
  "installing": "安装",
  "Error {{action}} the {{name}}": "{{action}}{{name}}失败",
  "Changes saved successfully!": "保存成功！",
  "Changes saved successfully": "保存成功",
  "{{dataid}} saved successfully": "「{{dataid}}」保存成功",
  "{{dataid}} docs is not available at the moment.": "「{{dataid}}」暂时不可用。",
  "Flow built successfully": "流程构建成功",

  "Search Body": "搜索内容",
  "Document textual search terms to apply to the search query.": "用于搜索查询文档文本的搜索词。",
  "Enable Body Search": "启用内容搜索",
  "Flag to enable body search. This must be enabled BEFORE the table is created.": "启用内容搜索标志。必须在创建表之前启用。",
  "Search Metadata Filter": "搜索元数据过滤器",
  "Optional dictionary of filters to apply to the search query.": "用于搜索查询过滤器的可选字典。",
  "Search Score Threshold": "搜索分数阈值",
  "Minimum similarity score threshold for search results. (when using 'Similarity with score threshold')": "搜索结果的最小相似度分数阈值（使用“具有分数阈值的相似度”时）",
  "Search type to use": "使用的搜索类型",
  "Component": "组件",
  "component": "组件",

  "Success! Keys deleted!": "密钥删除成功！",
  "Export flow as JSON file.": "导出流程为JSON文件。",
  "Explore detailed logs of events and transactions between components.": "探索组件之间的事件与事物的详细日志。",
  "Export your flow to integrate it using this code.": "导出流程以便使用此代码集成。",
  "Adjust component's settings and define parameter visibility. Remember to save your changes.": "调整组件设置并定义参数可见性。记得保存更改。",
  "Chat Cannot Open": "对话无法打开",
  "This is not a chat flow.": "这不是对话流程。",
  "Flow not built": "流程不能构建",
  "Please build the flow before chatting.": "请先构建流程再进行对话。",
  "Import flows from a JSON file or choose from pre-existing examples.": "从JSON文件导入流程或选择现有示例。",
  "No compatible components found.": "未找到兼容组件。",
  "CSV output": "CSV输出",
  "Expand the ouptut to see the PDF": "展开输出查看PDF",
  "Error loading CSV": "加载CSV出错",
  "Error loading PDF": "加载PDF出错",
  "Please check your flow and try again": "请检查流程后重试",
  "PDF Output": "PDF输出",
  "Run the flow to see the pdf": "运行流程以查看PDF",
  "Expand the view to see the image": "展开视图查看图片",
  "No node found!": "未找到节点！",
  "Display Prompt": "显示提示",
  "Run the flow or inform a valid url to see your image": "运行流程或输入有效的URL查看图片",
  "Image output": "图片输出",
  "You don't have an API Key. Please add one to use the Langflow Store." : "您还没有设置API密钥，添加密钥后才能使用Langflow仓库。",
  "Your API Key is not valid. Please add a valid API Key to use the Langflow Store.": "您的API密钥无效，添加有效的API密钥才能使用Langflow仓库。",
  "Oops! Looks like you missed something": "哎呀！看起来您缺失了一些内容",
  "Unknown Error": "未知错误",
  "Invalid components": "无效组件",
  "Please select a valid file. Only these file types are allowed:" : "请选择有效文件。只允许以下文件类型：",
  "Error occurred while uploading file": "上传文件时发生错误",
  "Install Locally": "安装",
  "Import from JSON": "从JSON导入",
  "File uploaded successfully": "文件上传成功",
  "Oops! Looks like you missed some required information:" : "哎呀！看起来您缺失了一些必要信息：",
  "There is an error in your function": "您的函数中有错误",
  "There is an error in your imports": "您的导入中有错误",
  "Something went wrong, please try again": "发生了错误，请重试",
  "Prompt is ready": "提示已就绪",
  "Your template does not have any variables.": "您的模板没有任何变量。",
  "There is something wrong with this prompt, please review it": "此提示有问题，请检查",
  "There is something wrong with this code, please review it": "此代码有问题，请检查",
  "Please build the flow again before using the chat." : "请在使用对话前重新构建流程。",
  "There was an error sending the message": "发送消息时出错",
  "There was an error saving the API Key, please try again.": "保存API密钥时出错，请重试。",

  "Error on delete user": "删除用户出错",
  "Success! User deleted!": "用户删除成功！",
  "Error on edit user": "编辑用户出错",
  "Success! User edited!": "用户编辑成功！",
  "Search Username": "搜索用户名",
  "New User": "新建用户",
  "Add a new user": "添加新用户",
  "No users registered.": "无用户。",
  "Id": "ID",
  "Username": "用户名",
  "Please enter your username": "请输入用户名",
  "Please enter a password": "请输入密码",
  "Confirm your password": "确认密码",
  "Please confirm your password": "请确认密码",
  "Sign up": "注册",
  "Already have an account": "已有账户",
  "Sign in": "登录",

  "Active": "启用",
  "Superuser": "超级用户",
  "Created At": "创建时间",
  "Updated At": "更新时间",
  "Attention!": "注意！",
  "Are you completely confident about the changes": "你确认要进行这些更改",
  "you are making to this user?": "吗？",
  "Are you sure you want to delete this user?": "您确定要删除此用户吗？",
  "This action cannot be undone." : "此操作无法撤销。",
  "Error when adding new user": "添加新用户时出错",
  "Success! New user added!": "新用户添加成功！",
  "Error signing in": "登录时出错",
  "Password": "密码",
  "Confirm Password": "确认密码",
  "Login": "登录",
  "url": "链接",

  "Success! Key deleted!": "密钥删除成功！",

  "Error on delete key": "删除密钥出错",
  "Error on delete keys": "删除密钥出错",
  "code": "代码",
  "ignore_links": "忽略链接",
  "Ungroup": "取消分组",

  "Invalid file type": "无效文件类型",
  "Please upload a JSON file": "请上传JSON文件",
  "Invalid selection": "无效选择",
  "Error changing password": "修改密码出错",
  "Passwords do not match": "密码不匹配",
  "Error saving changes": "保存更改出错",
  "Error retrieving profile pictures": "获取头像出错",
  "Error signing up": "注册出错",
  "Account created! Await admin activation.": "账户已创建！请等待管理员激活。",
  "Sign up to Langflow": "注册用户",
  "Select options": "选择选项",
  "Clear": "清除",

  "Type your new password and confirm it.": "输入新密码并确认",
  "Error while saving changes": "保存更改时出错",

  "Invalid endpoint name. Use only letters, numbers, hyphens, and underscores ({{maxLength}} characters max).": "无效的端点名称。只能使用字毽、数字、连字符和下划线（最多{{maxLength}}个字符）。",

  "It seems {{name}} already exists. Do you want to replace it with the current?": "{{name}}已存在，您要用当前内容替换吗？",
  "Error sharing {{name}}": "分享{{name}}时出错",
  "{{name}} shared successfully!": "{{name}}分享成功！",
  "Share {{name}}": "分享{{name}}",
  "Publish {{name}} to the Langflow Store.": "发布{{name}}到Langflow仓库。",
  "your component": "组件",
  "workflow": "流程",
  "Flow": "流程",
  "Run Flow": "运行",
  "Error on Streaming": "流式传输出错",
  "Error in component {{name}}": "组件{{name}}出错",

  "The name of the embeddings provider API key stored on Astra. If set, it will override the 'ProviderKey' in the authentication parameters.": "存储在Astra上的嵌入式提供者API密钥的名称。如果设置，它将覆盖认证参数中的'ProviderKey'。",
  "An alternative to the Astra Authentication that let you use directly the API key of the provider.": "Astra认证的替代方案，让您直接使用提供者的API密钥。",
  "Your Azure endpoint, including the resource. Example: `https://example-resource.azure.openai.com/`": "您的Azure接口地址。例如：`https://example-resource.azure.openai.com/`",
  "The number of dimensions the resulting output embeddings should have. Only supported by certain models.": "输出嵌入应具有的维数。仅由某些模型支持。",
  "Default headers to use for the API request.": "API请求的默认标头。",
  "Default query parameters to use for the API request.": "API请求的默认查询参数。",
  "If False, you must have transformers installed.": "如果为False，则必须安装transformers。",
  "System prompt for the agent.": "助手的系统提示。",
  "Input text to pass to the agent.": "传递给助手的输入文本。",
  "This prompt must contain 'input' key.": "此提示必须包含'input'关键字。",
  "If True, the agent will handle parsing errors. If False, the agent will raise an error.": "如果为True，助手将处理解析错误。如果为False，助手将抛出错误。",
  "Memory to use for the agent.": "助手使用的记忆。",
  "The maximum number of tokens to generate. Set to 0 for unlimited tokens.": "生成的最大令牌数。设置为0表示无限制。",
  "The Mistral API Key to use for the Mistral model.": "Mistral模型使用的Mistral API密钥。",
  "System message to pass to the model.": "传递给模型的系统消息。",
  "The Cohere API Key to use for the Cohere model.": "Cohere模型使用的Cohere API密钥。",
  "which you could get from  https://cloud.baidu.com/product/wenxinworkshop": "您可以从 https://cloud.baidu.com/product/wenxinworkshop 获取。",
  "Model params, only supported in ERNIE-Bot and ERNIE-Bot-turbo": "模型参数，仅在ERNIE-Bot和ERNIE-Bot-turbo中支持",
  "Endpoint of the Qianfan LLM, required if custom model used.": "百度千帆接口地址，如果使用自定义模型则需要。",
  "The maximum number of tokens to generate.": "生成的最大令牌数。",
  "The name of the model to use.": "要使用的模型名称。",
  "The Google API Key to use for the Google Generative AI.": "Google生成AI使用的Google API密钥。",
  "The maximum cumulative probability of tokens to consider when sampling.": "采样时要考虑的令牌的最大累积概率。",
  "Number of chat completions to generate for each prompt. Note that the API may not return the full n completions if duplicates are generated.": "为每个提示生成的对话完成数。请注意，如果生成重复项，则API可能不会返回完整的重复项。",
  "Decode using top-k sampling: consider the set of top_k most probable tokens. Must be positive.": "使用top-k采样解码：考虑最可能的前k个令牌集。必须是正数。",
  "Endpoint of the Ollama API. Defaults to 'http://localhost:11434' if not specified.": "Ollama API的端点。如果未指定，则默认为'http://localhost:11434'。",
  "Refer to https://ollama.ai/library for more models.": "请参考 https://ollama.ai/library 获取更多模型。",
  "Controls the creativity of model responses.": "控制模型响应的创造力。",
  "Specify the format of the output (e.g., json).": "指定输出的格式（例如，json）。",
  "Metadata to add to the run trace.": "要添加到运行跟踪的元数据。",
  "Enable/disable Mirostat sampling for controlling perplexity.": "启用/禁用Mirostat采样以控制困惑度。",
  "Learning rate for Mirostat algorithm. (Default: 0.1)": "Mirostat算法的学习率。（默认：0.1）",
  "Controls the balance between coherence and diversity of the output. (Default: 5.0)": "控制输出的连贯性和多样性之间的平衡。（默认：5.0）",
  "Size of the context window for generating tokens. (Default: 2048)": "生成令牌的上下文窗口大小。（默认：2048）",
  "Number of GPUs to use for computation. (Default: 1 on macOS, 0 to disable)": "用于计算的GPU数量。（macOS默认为1，0表示禁用）",
  "Number of threads to use during computation. (Default: detected for optimal performance)": "计算过程中要使用的线程数。（默认：检测到的最佳性能）",
  "How far back the model looks to prevent repetition. (Default: 64, 0 = disabled, -1 = num_ctx)": "模型查看以防止重复的距离。（默认：64，0 = 禁用，-1 = num_ctx）",
  "Penalty for repetitions in generated text. (Default: 1.1)": "生成文本中重复的惩罚。（默认：1.1）",
  "Tail free sampling value. (Default: 1)": "尾部自由采样值。（默认：1）",
  "Timeout for the request stream.": "请求流的超时时间。",
  "Limits token selection to top K. (Default: 40)": "限制令牌选择为前K个。（默认：40）",
  "Works together with top-k. (Default: 0.9)": "与top-k一起使用。（默认：0.9）",
  "Whether to print out response text.": "是否打印响应文本。",
  "Comma-separated list of tags to add to the run trace.": "要添加到运行跟踪的标签的逗号分隔列表。",
  "Comma-separated list of tokens to signal the model to stop generating text.": "逗号分隔的令牌列表，用于指示模型停止生成文本。",
  "System to use for generating text.": "用于生成文本的系统。",
  "Template to use for generating text.": "用于生成文本的模板。",
  "If True, it will output JSON regardless of passing a schema.": "如果为True，无论是否传递模式，它都将输出JSON。",
  "The schema for the Output of the model. You must pass the word JSON in the prompt. If left blank, JSON mode will be disabled.": "模型输出的模式。您必须在提示中传递单词JSON。如果留空，将禁用JSON模式。",
  "The base URL of the OpenAI API. Defaults to https://api.openai.com/v1. You can change this to use other APIs like JinaChat, LocalAI and Prem.": "OpenAI API的基本URL。默认为https://api.openai.com/v1。您可以更改此以使用其他API，如JinaChat、LocalAI和Prem。",
  "The OpenAI API Key to use for the OpenAI model.": "OpenAI模型使用的OpenAI API密钥。",
  "The seed controls the reproducibility of the job.": "种子控制作业的可重现性。",
  "API key for the Groq API.": "Groq API的密钥。",
  "Base URL path for API requests, leave blank if not using a proxy or service emulator.": "API请求的基本URL路径，如果不使用代理或服务模拟器，请留空。",
  "Run inference with this temperature. Must by in the closed interval [0.0, 1.0].": "使用此活跃度运行推理。必须在闭区间[0.0, 1.0]中。",
  "The input to the model.": "模型的输入。",
  "Path to the JSON file containing the credentials.": "包含凭据的JSON文件的路径。",
  "The project ID.": "项目ID。",
  "OpenAI": "OpenAI平台",
  "Examples to pass to the model.": "传递给模型的示例。",
  "Your Anthropic API key.": "您的Anthropic API密钥。",
  "Endpoint of the Anthropic API. Defaults to 'https://api.anthropic.com' if not specified.": "Anthropic API的端点。如果未指定，则默认为'https://api.anthropic.com'。",
  "https://python.langchain.com/docs/integrations/chat/anthropic": "具体参考`https://python.langchain.com/docs/integrations/chat/anthropic`",
  "Prefill text to guide the model's response.": "填充文本以引导模型的响应。",
  "Contact points for the database (or AstraDB database ID)": "数据库的联系点（或AstraDB数据库ID）",
  "Username for the database (leave empty for AstraDB).": "数据库的用户名（留空)。",
  "User password for the database (or AstraDB token).": "数据库的用户密码（或AstraDB令牌）。",
  "Table Keyspace (or AstraDB namespace).": "命名空间（或AstraDB命名空间）。",
  "The name of the table (or AstraDB collection) where vectors will be stored.": "存储向量的表的名称（或AstraDB集合）。",
  "Optional time-to-live for the added texts.": "添加的文本的可选生存时间。",
  "Optional number of data to process in a single batch.": "单个批次中要处理的数据的可选数量。",
  "Optional options used to create the body index.": "用于创建正文索引的可选选项。",
  "Configuration mode for setting up the Cassandra table, with options like 'Sync', 'Async', or 'Off'.": "用于设置Cassandra表的配置模式，选项包括'Sync'、'Async'或'Off'。",
  "Optional dictionary of additional keyword arguments for the Cassandra cluster.": "Cassandra集群的其他关键字参数的可选字典。",
  "Number of results to return.": "要返回的结果数。",
  "Namespace for the index.": "索引的命名空间。",
  "Key in the record to use as text.": "用作文本的记录中的关键字。",
  "The name of the collection within Astra DB where the vectors will be stored.": "向量将存储在Astra DB中的集合的名称。",
  "Authentication token for accessing Astra DB.": "访问Astra DB的身份验证令牌。",
  "API endpoint URL for the Astra DB service.": "Astra DB服务的API地址。",
  "Optional namespace within Astra DB to use for the collection.": "用于集合的Astra DB中的可选命名空间。",
  "Optional distance metric for vector comparisons in the vector store.": "向量存储中向量比较的可选距离度量。",
  "Optional concurrency level for bulk insert operations.": "批量插入操作的可选并发级别。",
  "Optional concurrency level for bulk insert operations that overwrite existing data.": "覆盖现有数据的批量插入操作的可选并发级别。",
  "Optional concurrency level for bulk delete operations.": "批量删除操作的可选并发级别。",
  "Configuration mode for setting up the vector store, with options like 'Sync', 'Async', or 'Off'.": "用于设置向量存储的配置模式，选项包括'Sync'、'Async'或'Off'。",
  "Boolean flag to determine whether to delete the collection before creating a new one.": "确定是否在创建新集合之前删除集合的布尔标志。",
  "Optional list of metadata fields to include in the indexing.": "要包含在索引中的元数据字段的可选列表。",
  "Optional list of metadata fields to exclude from the indexing.": "要从索引中排除的元数据字段的可选列表。",
  "Optional dictionary defining the indexing policy for the collection.": "定义集合的索引策略的可选字典。",
  "Path to save the FAISS index. It will be relative to where Langflow is running.": "保存FAISS索引的路径，相对于服务运行的位置。",
  "Set to True to allow loading pickle files from untrusted sources. Only enable this if you trust the source of the data.": "设置为True以允许从不受信任的来源加载文件，只有在信任数据来源时才启用此功能。",
  "If false, will not add documents that are already in the Vector Store.": "如果为false，则不会添加已经在向量存储中的文档。",
  "Limit the number of records to compare when Allow Duplicates is False.": "当允许重复项为False时，限制要比较的记录数。",
  "The URL of the Upstash index.": "Upstash索引的URL。",
  "The token for the Upstash index.": "Upstash索引的令牌。",
  "The key in the record to use as text.": "用作文本的记录中的关键字。",
  "To use Upstash's embeddings, don't provide an embedding.": "使用Upstash的嵌入，不需要提供嵌入。",
  "The primary text input for the operation.": "操作的主要文本输入。",
  "The text input to compare against.": "要与之比较的文本输入。",
  "The operator to apply for comparing the texts.": "用于比较文本的运算符。",
  "If true, the comparison will be case sensitive.": "如果为true，则比较将区分大小写。",
  "The message to pass through either route.": "要通过任一路由传递的消息。",
  "The maximum length of each chunk.": "每个块的最大长度。",
  "The amount of overlap between chunks.": "块之间的重叠量。",
  "The texts to split.": "要拆分的文本。",
  "The name of the model to use. For example, `gpt-3.5-turbo`.": "要使用的模型的名称。例如，`gpt-3.5-turbo`。",
  "The provider of the API key.": "API密钥的提供者。",
  "Number of chat completions to generate for each prompt. ": "为每个提示生成的对话完成数。",
  "The maximum number of tokens to generate for each chat completion.": "为每个对话完成生成的最大令牌数。",
  "The data to split.": "要拆分的数据。",
  "Number of characters to overlap between chunks.": "块之间重叠的字符数。",
  "The maximum number of characters in each chunk.": "每个块中的最大字符数。",
  "The character to split on. Defaults to newline.": "拆分的字符。默认为换行符。",
  "The primary input value to evaluate.": "要评估的主要输入值。",
  "The value to compare against the input value.": "要与输入值进行比较的值。",
  "Condition to evaluate the input value.": "评估输入值的条件。",
  "The value to pass if the condition is met.": "如果满足条件，则传递的值。",
  "Enter one or more URLs, separated by commas.": "输入一个或多个URL，用逗号分隔。",
  "Paste a curl command to populate the fields. This will fill in the dictionary fields for headers and body.": "粘贴一个curl命令以填充字段。这将填充标头和正文的字典字段。",
  "The HTTP method to use (GET, POST, PATCH, PUT).": "要使用的HTTP方法（GET、POST、PATCH、PUT）。",
  "The headers to send with the request as a dictionary. This is populated when using the CURL field.": "要发送的标头与请求一起作为字典。使用CURL字段时会填充。",
  "The body to send with the request as a dictionary (for POST, PATCH, PUT). This is populated when using the CURL field.": "要与请求一起发送的正文作为字典（用于POST、PATCH、PUT）。使用CURL字段时会填充。",
  "The query parameters to append to the URL.": "要附加到URL的查询参数。",
  "The timeout to use for the request.": "用于请求的超时时间。",
  "Use this field to quickly test the webhook component by providing a JSON payload.": "通过提供JSON有效负载，使用此字段快速测试回调组件。",
  "If true, errors will not raise an exception.": "如果为true，则错误不会引发异常。",
  "Path to the directory to load files from.": "要加载文件的目录路径。",
  "File types to load. Leave empty to load all types.": "要加载的文件类型。留空以加载所有类型。",
  "Depth to search for files.": "要搜索文件的深度。",
  "Maximum concurrency for loading files.": "加载文件的最大并发数。",
  "If true, hidden files will be loaded.": "如果为true，则将加载隐藏文件。",
  "If true, the search will be recursive.": "如果为true，则搜索将是递归的。",
  "If true, multithreading will be used.": "如果为true，则将使用多线程。",
  "Text to be passed as output.": "要传递的文本。",
  "Message to be passed as output.": "要传递的消息。",
  "Type of sender.": "发送者类型。",
  "Name of the sender.": "发送者的名称。",
  "Session ID for the message.": "消息的会话ID。",
  "Template to convert Data to Text. If left empty, it will be dynamically set to the Data's text key.": "将数据转换为文本的模板。如果留空，将动态设置为数据的文本键。",
  "The first text input to concatenate.": "要连接的第一个文本输入。",
  "The second text input to concatenate.": "要连接的第二个文本输入。",
  "A string used to separate the two text inputs. Defaults to a whitespace.": "用于分隔两个文本输入的字符串。默认为空格。",
  "The data to convert to text.": "要转换为文本的数据。",
  "The template to use for formatting the data. It can contain the keys {text}, {data} or any other key in the Data.": "用于格式化数据的模板。它可以包含{text}、{data}或数据中的任何其他键。",
  "Number of messages to retrieve.": "要检索的消息数。",
  "Session ID of the chat history.": "聊天历史的会话ID。",
  "Order of the messages.": "消息的顺序。",
  "The template to use for formatting the data. It can contain the keys {text}, {sender} or any other key in the message data.": "用于格式化数据的模板。它可以包含{text}、{sender}或消息数据中的任何其他键。",
  "Data object to filter.": "要过滤的数据对象。",
  "List of keys to filter by.": "要过滤的键列表。",
  "Text to be passed as input.": "要传递的文本。",
  "Message to be passed as input.": "要传递的消息。",
  "Files to be sent with the message.": "要与消息一起发送的文件。",
  "Stream the response from the model. Streaming works only in Chat.": "使用流式传输响应，流式传输仅在对话中有效。",

  "Chat Input": "对话输入",
  "Text Input": "文本输入",
  "Chat Output": "对话输出",
  "ChatOutput": "对话输出",
  "Text Output": "文本输出",
  "API Request": "接口请求",
  "Directory": "文件夹",
  "File": "文件",
  "URL": "网址",
  "Webhook Input": "回调输入",
  "Ollama": "羊驼Ollama",
  "Qianfan": "百度千帆",
  "Amazon Bedrock": "亚马逊Bedrock平台",
  "Model Kwargs": "模型参数",
  "System Message": "系统消息",
  "Anthropic": "Anthropic平台",
  "Max Tokens": "最大词量数",
  "Prefill": "填充",
  "Anthropic API URL": "接口地址",
  "Azure OpenAI": "Azure OpenAI代理",
  "Top P": "最大累计概率",
  "API Version": "API版本",
  "Cohere": "Cohere平台",
  "Google Generative AI": "Google Generative AI平台",
  "Groq": "Groq平台",
  "Groq API Base": "服务地址",
  "Hugging Face API": "Hugging Face API",
  "MistralAI": "MistralAI平台",
  "Vertex AI": "VertexAI平台",
  "Chat Memory": "对话记忆",
  "Number of Messages": "消息数量",
  "Order": "顺序",
  "Combine Text": "文本合并",
  "Custom Component": "自定义组件",
  "Filter Data": "数据过滤",
  "FilterData": "数据过滤",
  "ID Generator": "ID生成器",
  "Merge Data": "数据合并",
  "Parse Data": "数据解析",
  "Split Text": "文本拆分",
  "Store Message": "消息存储",
  "Sender": "发送者",
  "The chat message to be stored.": "要存储的对话消息。",
  "Astra DB": "Astra DB分布式库",
  "Batch Size": "批量大小",
  "Bulk Insert Batch Concurrency": "批量插入并发",
  "Bulk Insert Overwrite Concurrency": "批量插入覆盖并发",
  "Bulk Delete Concurrency": "批量删除并发",
  "Pre Delete Collection": "删除集合前",
  "Metadata Indexing Include": "元数据索引包含",
  "Collection Indexing Policy": "集合索引策略",
  "Metadata Indexing Exclude": "元数据索引排除",
  "Metric": "度量",
  "Setup Mode": "设置模式",
  "Number of Results": "结果数量",
  "Cassandra": "Cassandra分布式库",
  "Cassandra Vector Store with search capabilities": "具有搜索功能的Cassandra向量存储",
  "Body Index Options": "正文索引选项",
  "Cluster arguments": "集群参数",
  "TTL Seconds": "存活时间(秒)",
  "Contact Points / Astra Database ID": "联系点 / Astra数据库ID",
  "Password / AstraDB Token": "密码 / AstraDB令牌",
  "Keyspace": "命名空间",
  "Table Name": "表名",
  "Search Query": "搜索查询",
  "Embedding": "词嵌入",
  "Duration": "耗用时间",
  "The sender of the message.": "消息发送者。",
  "The name of the sender.": "发送者名称。",
  "Chroma DB": "Chroma DB向量库",
  "Chroma Vector Store with search capabilities": "具有搜索功能的Chroma向量存储",
  "Persist Directory": "持久化目录",
  "Server CORS Allow Origins": "服务允许的请求来源",
  "Server Host": "服务主机",
  "Server HTTP Port": "HTTP端口",
  "Server SSL Enabled": "是否启用SSL",
  "Allow Duplicates": "允许重复",
  "Server gRPC Port": "gRPC端口",
  "Couchbase": "Couchbase数据库",
  "Couchbase Vector Store with search capabilities": "具有搜索功能的Couchbase向量存储",
  "Couchbase username": "用户名",
  "Couchbase password": "密码",
  "Bucket Name": "桶名",
  "Scope Name": "范围名",
  "Index Name": "索引名",
  "Couchbase Cluster connection string": "连接字符串",
  "FAISS": "FAISS向量库",
  "Allow Dangerous Deserialization": "允许有风险的反序列化加载",
  "FAISS Vector Store with search capabilities": "具有搜索功能的FAISS向量存储",
  "MongoDB Atlas": "MongoDB云数据库",
  "MongoDB Atlas Vector Store with search capabilities": "具有搜索功能的MongoDB Atlas向量存储",
  "MongoDB Atlas Cluster URI": "连接地址",
  "Database Name": "数据库名",
  "PGVector": "PGVector向量库",
  "PGVector Vector Store with search capabilities": "具有搜索功能的PGVector向量存储",
  "PostgreSQL Server Connection String": "连接字符串",
  "Table": "数据表名",
  "Ingestion Data": "摄入数据",
  "Pinecone": "Pinecone向量库",
  "Distance Strategy": "距离策略",
  "Pinecone Vector Store with search capabilities": "具有搜索功能的Pinecone向量存储",
  "Namespace": "名字空间",
  "Pinecone API Key": "API密钥",
  "Qdrant": "Qdrant向量库",
  "Metadata Payload Key": "元数据载荷关键字",
  "Content Payload Key": "内容载荷关键字",
  "Distance Function": "距离函数",
  "gRPC Port": "gRPC端口",
  "Host": "主机",
  "Port": "端口",
  "Prefix": "前缀",
  "Search By Text": "搜索文本",
  "Qdrant Vector Store with search capabilities": "具有搜索功能的Qdrant向量存储",
  "Redis": "Redis缓存库",
  "Implementation of Vector Store using Redis": "使用Redis实现的向量存储",
  "Redis Server Connection String": "连接字符串",
  "Redis Index": "索引",
  "Schema": "模式",
  "Supabase": "Supabase数据库",
  "Supabase Vector Store with search capabilities": "具有搜索功能的Supabase向量存储",
  "Supabase URL": "连接地址",
  "Supabase Service Key": "服务密钥",
  "Query Name": "查询名称",
  "Upstash": "Upstash数据服务",
  "Upstash Vector Store with search capabilities": "具有搜索功能的Upstash向量存储",
  "Index URL": "索引地址",
  "Index Token": "索引令牌",
  "Vectara": "Vectara存储服务",
  "Vectara Vector Store with search capabilities": "具有搜索功能的Vectara向量存储服务",
  "Vectara Customer ID": "租户标识",
  "Vectara Corpus ID": "语料库标识",
  "Vectara API Key": "API密钥",
  "Weaviate": "Weaviate服务",
  "Weaviate Vector Store with search capabilities": "具有搜索功能的Weaviate向量存储服务",
  "Weaviate URL": "连接地址",
  "Amazon Bedrock Embeddings": "Amazon Bedrock词嵌入",
  "AmazonBedrockEmbeddings": "Amazon Bedrock词嵌入",
  "Generate embeddings using Amazon Bedrock models.": "使用Amazon Bedrock模型生成词嵌入。",
  "Model Id": "模型",
  "Bedrock Endpoint URL": "接口地址",
  "AWS Region": "AWS区域",
  "Astra Vectorize": "Astra Vectorize词嵌入",
  "Authentication parameters": "身份验证参数",
  "Provider API Key": "API密钥",
  "Model parameters": "模型参数",
  "Dimensions": "维度",
  "Configuration options for Astra Vectorize server-side embeddings.": "Astra Vectorize服务器端嵌入的配置选项。",
  "Provider name": "提供器名称",
  "Model name": "模型名称",
  "API Key name": "API密钥名称",
  "Vectorize": "向量化",
  "The embedding model to use for the selected provider. Each provider has a different set of models available (full list at https://docs.datastax.com/en/astra-db-serverless/databases/embedding-generation.html):\n\nAzure OpenAI: text-embedding-3-small, text-embedding-3-large, text-embedding-ada-002\n\nHugging Face - Dedicated: endpoint-defined-model\n\nHugging Face - Serverless: sentence-transformers/all-MiniLM-L6-v2, intfloat/multilingual-e5-large, intfloat/multilingual-e5-large-instruct, BAAI/bge-small-en-v1.5, BAAI/bge-base-en-v1.5, BAAI/bge-large-en-v1.5\n\nJina AI: jina-embeddings-v2-base-en, jina-embeddings-v2-base-de, jina-embeddings-v2-base-es, jina-embeddings-v2-base-code, jina-embeddings-v2-base-zh\n\nMistral AI: mistral-embed\n\nNVIDIA: NV-Embed-QA\n\nOpenAI: text-embedding-3-small, text-embedding-3-large, text-embedding-ada-002\n\nUpstage: solar-embedding-1-large\n\nVoyage AI: voyage-large-2-instruct, voyage-law-2, voyage-code-2, voyage-large-2, voyage-2": "要用于所选提供者的嵌入模型。每个提供者都有不同的可用模型集（完整列表请参见 https://docs.datastax.com/en/astra-db-serverless/databases/embedding-generation.html）：\n\nAzure OpenAI：text-embedding-3-small、text-embedding-3-large、text-embedding-ada-002\n\nHugging Face - 专用：endpoint-defined-model\n\nHugging Face - 无服务器：sentence-transformers/all-MiniLM-L6-v2、intfloat/multilingual-e5-large、intfloat/multilingual-e5-large-instruct、BAAI/bge-small-en-v1.5、BAAI/bge-base-en-v1.5、BAAI/bge-large-en-v1.5\n\nJina AI：jina-embeddings-v2-base-en、jina-embeddings-v2-base-de、jina-embeddings-v2-base-es、jina-embeddings-v2-base-code、jina-embeddings-v2-base-zh\n\nMistral AI：mistral-embed\n\nNVIDIA：NV-Embed-QA\n\nOpenAI：text-embedding-3-small、text-embedding-3-large、text-embedding-ada-002\n\nUpstage：solar-embedding-1-large\n\nVoyage AI：voyage-large-2-instruct、voyage-law-2、voyage-code-2、voyage-large-2、voyage-2",
  "Azure OpenAI Embeddings": "Azure OpenAI词嵌入",
  "AzureOpenAIEmbeddings": "Azure OpenAI词嵌入",
  "Generate embeddings using Azure OpenAI models.": "使用Azure OpenAI模型生成词嵌入。",
  "Cohere Embeddings": "Cohere词嵌入",
  "API URL": "接口地址",
  "Cache Folder": "缓存目录",
  "Encode Kwargs": "编码参数",
  "Multi Process": "多进程",
  "Model Temperature": "模型活跃度",
  "Client": "客户机",
  "Default Query": "默认查询",
  "Deployment": "部署",
  "Embedding Context Length": "词嵌入上下文长度",
  "OpenAI API Type": "API类型",
  "OpenAI API Version": "API版本",
  "OpenAI Organization": "组织",
  "OpenAI Proxy": "代理",
  "Show Progress Bar": "显示进度条",
  "Skip Empty": "跳过空值",
  "TikToken Enable": "启用字节对编码",
  "TikToken Model Name": "字节对编码模型名称",
  "Instance": "实例",
  "Request Parallelism": "请求并行度",
  "Streaming": "流式传输",
  "Default Headers": "默认标头",
  "Request Timeout": "请求超时",
  "Truncate": "截断",
  "CohereEmbeddings": "Cohere词嵌入",
  "Number of results": "结果数量",
  "Generate embeddings using Cohere models.": "使用Cohere模型生成词嵌入。",
  "Hugging Face API Embeddings": "Hugging Face API词嵌入",
  "HuggingFaceInferenceAPIEmbeddings": "Hugging Face API词嵌入",
  "Agent Type": "助手类型",
  "Handle Parse Errors": "处理解析错误",
  "Generate embeddings using Hugging Face Inference API models.": "使用Hugging Face推理API模型生成词嵌入。",
  "Handle Parsing Errors": "处理解析错误",
  "PythonCodeStructuredTool": "Python代码工具",
  "SearchAPITool": "SearchAPI工具",
  "PythonREPLTool": "Python交互式运行工具",
  "Tool Template": "工具模板",
  "Hugging Face Embeddings": "Hugging Face词嵌入",
  "HuggingFaceEmbeddings": "Hugging Face词嵌入",
  "Generate embeddings using HuggingFace models.": "使用HuggingFace模型生成词嵌入。",
  "MistralAI Embeddings": "MistralAI词嵌入",
  "Generate embeddings using MistralAI models.": "使用MistralAI模型生成词嵌入。",
  "Ollama Embeddings": "羊驼Ollama词嵌入",
  "OllamaEmbeddings": "羊驼Ollama词嵌入",
  "MistalAIEmbeddings": "MistralAI词嵌入",
  "Generate embeddings using Ollama models.": "使用羊驼Ollama模型生成词嵌入。",
  "Ollama Model": "模型名称",
  "Ollama Base URL": "接口地址",
  "OpenAI Embeddings": "OpenAI词嵌入",
  "OpenAIEmbeddings": "OpenAI词嵌入",
  "Generate embeddings using OpenAI models.": "使用OpenAI模型生成词嵌入。",
  "VertexAI Embeddings": "VertexAI词嵌入",
  "VertexAIEmbeddings": "VertexAI词嵌入",
  "Generate embeddings using Google Cloud VertexAI models.": "使用Google Cloud VertexAI模型生成词嵌入。",
  "Credentials": "凭据",
  "Implementation of Vector Store using Astra DB with search capabilities": "使用Astra DB实现的具有搜索功能的向量存储",
  "Collection Name": "集合名称",
  "Astra DB Application Token": "应用令牌",
  "API Endpoint": "接口地址",
  "Search Input": "搜索输入",
  "Ingest Data": "摄入数据",
  "Embedding or Astra Vectorize": "词嵌入或Astra Vectorize词嵌入",
  "Retriever": "检索器",
  "Search Results": "搜索结果",
  "CSVAgent": "CSV助手",
  "Construct a CSV agent from a CSV and tools.": "使用CSV及工具构建CSV助手。",
  "LLM": "大模型",
  "JsonAgent": "JSON助手",
  "Construct a json agent from an LLM and tools.": "使用大模型及工具构建JSON助手。",
  "Toolkit": "工具包",
  "JsonToolkit": "JSON工具包",
  "Toolkit for interacting with a JSON spec.": "用于与JSON规范交互的工具包。",
  "SQLAgent": "SQL助手",
  "Construct an SQL agent from an LLM and tools.": "使用大模型及工具构建SQL助手。",
  "Database URI": "数据库地址",
  "Callable": "可调用",
  "Tool Calling Agent": "工具调用助手",
  "Agent that uses tools. Only models that are compatible with function calling are supported.": "使用工具的助手，仅支持与函数调用兼容的模型。",
  "System Prompt": "系统提示",
  "You are a helpful assistant": "您是一个乐于助人的助手",
  "AI": "机器人",
  "Prototypes": "原型",
  "VectorStoreAgent": "向量存储助手",
  "Construct an agent from a Vector Store.": "从向量存储中构建助手。",
  "Vector Store Info": "向量存储信息",
  "VectorStoreRouterAgent": "向量存储路由助手",
  "Construct an agent from a Vector Store Router.": "从向量存储路由中构建助手。",
  "Vector Store Router Toolkit": "向量存储路由工具包",
  "XMLAgent": "XML助手",
  "XML Agent": "XML助手",
  "NVIDIA Embeddings": "NVIDIA词嵌入",
  "Generate embeddings using NVIDIA models.": "使用NVIDIA模型生成词嵌入。",
  "NVIDIA Base URL": "接口地址",
  "NVIDIA API Key": "API密钥",
  "Construct an XML agent from an LLM and tools.": "使用大模型及工具构建XML助手。",
  "Message History": "历史消息",
  "Message history to pass to the agent.": "要传递给助手的历史消息",
  "This prompt must contain 'tools' and 'agent_scratchpad' keys.": "此提示必须包含'tools'和'agent_scratchpad'关键字。",
  "ConversationChain": "对话链",
  "Chain to have a conversation and load context from memory.": "进行对话并从记忆中加载上下文的链。",
  "The input value to pass to the chain.": "要传递给链的输入值。",
  "Memory to load context from. If none is provided, a ConversationBufferMemory will be used.": "要从中加载上下文的记忆，如果未提供则使用ConversationBufferMemory。",
  "LLMChain": "LLM链",
  "template": "模板",
  "Chain to run queries against LLMs": "针对LLM运行查询的链",
  "LLMCheckerChain": "LLM检查链",
  "LLMMathChain": "LLM数学链",
  "Chain that interprets a prompt and executes python code to do math.": "解释提示并执行Python代码进行数学运算的链。",
  "Input Key": "输入关键字",
  "Natural Language to SQL": "自然语言转SQL",
  "LLM Chain": "LLM链",
  "Output Key": "输出关键字",
  "Generate SQL from natural language.": "根据自然语言生成SQL。",
  "Database": "数据库",
  "SQL Database": "SQL数据库。",
  "URI to the database.": "数据库连接字符串。",
  "URI": "连接字符串",
  "The prompt must contain `{question}`.": "提示词必须包含`{question}`。",
  "The number of results per select statement to return. If 0, no limit.": "要返回的每个select语句的结果数。如果为0，则无限制。",
  "Top K": "返回限制",
  "Retrieval QA": "检索问答",
  "Chain for question-answering against an index.": "针对索引进行问答的链。",
  "Chain Type": "链类型",
  "Return Source Documents": "返回源文档",
  "RetrievalQAWithSourcesChain": "检索问答与来源链",
  "Question-answering with sources over an index.": "在索引上进行问答并返回来源。",
  "The type of chain to use to combined Documents.": "用于合并文档的链的类型。",
  "BingSearchAPIWrapper": "必应搜索API包装器",
  "Wrapper for Bing Search API.": "必应搜索API的包装器。",
  "Bing Search URL": "搜索地址",
  "Bing Subscription Key": "订阅密钥",
  "FirecrawlCrawlApi": "Firecrawl爬虫API",
  "Firecrawl Crawl API.": "Firecrawl爬虫API封装器。",
  "The API key to use Firecrawl API.": "使用Firecrawl API的密钥。",
  "N": "对话完成数",
  "API token": "API令牌",
  "Format": "格式",
  "Mirostat": "Mirostat采样",
  "Mirostat Eta": "Mirostat学习率",
  "Mirostat Tau": "Mirostat平衡数",
  "Context Window Size": "上下文窗口大小",
  "Number of GPUs": "GPU数量",
  "Number of Threads": "线程数",
  "Repeat Last N": "防重距离",
  "Repeat Penalty": "重复惩罚",
  "Mistral API Base": "接口地址",
  "TFS Z": "尾部自由采样",
  "JSON Mode": "JSON模式",
  "OpenAI API Base": "接口地址",
  "Open": "打开",
  "Seed": "种子",
  "Penalty Score": "惩罚分数",
  "Top p": "最大累计概率",
  "System": "系统",
  "Stop Tokens": "停止字符",
  "Tags": "标签",
  "The base URL of the Mistral API. Defaults to https://api.mistral.ai/v1. You can change this to use other APIs like JinaChat, LocalAI and Prem.": "Mistral API的接口地址。默认为https://api.mistral.ai/v1。您可以更改此选项以使用其他API，如JinaChat、LocalAI和Prem。",
  "Model Keyword Arguments": "模型关键字参数",
  "Max Retries": "最大重试次数",
  "Random Seed": "随机种子",
  "Safe Mode": "安全模式",
  "Max Concurrent Requests": "最大并发请求数",
  "The base URL to start crawling from.": "开始爬取的基础URL。",
  "The timeout in milliseconds.": "超时时间（毫秒）。",
  "Options for the crawler behavior.": "爬虫行为选项。",
  "The page options to send with the request.": "与请求一起发送的页面选项。",
  "Optional idempotency key to ensure unique requests.": "可选的幂等键以确保请求唯一。",
  "Idempotency Key": "幂等关键字",
  "Crawler Options": "爬虫选项",
  "Page Options": "页面选项",
  "FirecrawlScrapeApi": "Firecrawl抓取API",
  "Firecrawl Scrape API.": "Firecrawl抓取API封装器。",
  "The URL to scrape.": "要抓取的URL。",
  "Timeout in milliseconds for the request.": "请求超时时间（毫秒）。",
  "Extractor Options": "提取器选项",
  "The extractor options to send with the request.": "与请求一起发送的提取器选项。",
  "GoogleSearchAPIWrapper": "Google搜索API包装器",
  "Wrapper for Google Search API.": "Google搜索API的包装器。",
  "GoogleSerperAPIWrapper": "Google引擎API包装器",
  "Google CSE ID": "自定义搜索引擎ID",
  "Wrapper around the Serper.dev Google Search API.": "Serper.dev Google搜索API的包装器。",
  "Serper API Key": "API密钥",
  "JSON Document Builder": "JSON文档构建器",
  "Build a Document containing a JSON object using a key and another Document page content.": "使用关键字与其他文档内容构建一个包含JSON对象的文档。",
  "Document": "文档",
  "SearchApi": "SearchApi平台",
  "Real-time search engine results API.": "实时搜索引擎结果API（参见https://www.searchapi.io/）",
  "Engine": "引擎",
  "The search engine to use.": "要使用的搜索引擎名称。",
  "The API key to use SearchApi.": "使用引擎的API密钥。",
  "Parameters": "附加参数",
  "The parameters to send with the request.": "与请求一起发送的附加参数。",
  "SearxSearchWrapper": "Searx搜索包装器",
  "k": "k参数",
  "Searx Host": "主机地址",
  "Wrapper for Searx API.": "Searx API包装器。",
  "Vector Store to be passed as input.": "传递的向量存储。",
  "SerpAPIWrapper": "SerpAPI包装器",
  "Wrapper around SerpAPI": "SerpAPI包装器。",
  "SerpAPI API Key": "API密钥",
  "SQLDatabase": "SQL数据库",
  "WikipediaAPIWrapper": "维基百科API包装器",
  "Wrapper around WikipediaAPI.": "维基百科API包装器。",
  "doc_content_chars_max": "文档内容最大字符数",
  "lang": "语言",
  "load_all_available_meta": "加载所有可用元数据",
  "top_k_results": "返回结果数",
  "WolframAlphaAPIWrapper": "Wolfram Alpha API包装器",
  "Wrapper for Wolfram Alpha.": "Wolfram Alpha API包装器。",
  "App ID": "应用ID",
  "Astra DB Message Reader": "Astra DB消息读取器",
  "Retrieves stored chat messages from Astra DB.": "从Astra DB检索存储的对话消息。",
  "Astra DB API Endpoint": "接口地址",
  "Token for the Astra DB instance.": "Astra DB实例的令牌。",
  "Collection name for Astra DB.": "Astra DB的集合名称。",
  "Astra DB Message Writer": "Astra DB消息写入器",
  "Data to write to Astra DB.": "要写入Astra DB的数据。",
  "Writes a message to Astra DB.": "向Astra DB写入消息。",
  "API Endpoint for the Astra DB instance.": "Astra DB实例的接口地址。",
  "Namespace for the Astra DB instance.": "Astra DB实例的命名空间。",
  "Input Data": "输入数据",
  "Cassandra Message Reader": "Cassandra消息读取器",
  "The Astra database ID.": "Astra数据库ID。",
  "Cassandra Message Writer": "Cassandra消息写入器",
  "Writes a message to a Cassandra table on Astra DB.": "向Astra DB上的Cassandra表写入消息。",
  "Database ID": "数据库ID",
  "Data to write to Cassandra.": "要写入Cassandra的数据。",
  "The name of the table where messages will be stored.": "存储消息的表的名称。",
  "Retrieves stored chat messages from a Cassandra table on Astra DB.": "从Astra DB上的Cassandra表中检索存储的对话消息。",
  "Authentication token for accessing Cassandra on Astra DB.": "用于访问Astra DB上的Cassandra的身份验证令牌。",
  "Optional key space within Astra DB. The keyspace should already be created.": "Astra DB中的可选关键空间，此关键空间应该提前创建好。",
  "Token": "令牌",
  "Zep Message Reader": "Zep消息读取器",
  "Zep Message Writer": "Zep消息写入器",
  "Conditional Router": "条件路由",
  "Routes an input message to a corresponding output based on text comparison.": "根据文本比较将输入消息路由到相应的输出。",
  "Case Sensitive": "区分大小写",
  "Operator": "操作符",
  "Field 1": "字段1",
  "Field 2": "字段2",
  "Field 3": "字段2",
  "Field 4": "字段2",
  "Field 5": "字段2",
  "Field 6": "字段2",
  "Field 7": "字段2",
  "Field 8": "字段2",
  "Field 9": "字段2",
  "Field 10": "字段2",
  "Field 11": "字段2",
  "Field 12": "字段2",
  "Field 13": "字段2",
  "Field 14": "字段2",
  "Field 15": "字段2",
  "Key for field 1.": "字段1的名称。",
  "Key for field 2.": "字段1的名称。",
  "Key for field 3.": "字段1的名称。",
  "Key for field 4.": "字段1的名称。",
  "Key for field 5.": "字段1的名称。",
  "Key for field 6.": "字段1的名称。",
  "Key for field 7.": "字段1的名称。",
  "Key for field 8.": "字段1的名称。",
  "Key for field 9.": "字段1的名称。",
  "Key for field 10.": "字段1的名称。",
  "Key for field 11.": "字段1的名称。",
  "Key for field 12.": "字段1的名称。",
  "Key for field 13.": "字段1的名称。",
  "Key for field 14.": "字段1的名称。",
  "Key for field 15.": "字段1的名称。",
  "Input Text": "输入文本",
  "Retrieves stored chat messages from Zep.": "从Zep检索存储的对话消息。",
  "Dynamically create a Data with a specified number of fields.": "动态创建具有指定字段数的数据。",
  "Number of fields cannot exceed 15. Try using a Component to combine two Data.": "字段数不能超过15，尝试使用组件将两个数据合并。",
  "URL of the Zep instance.": "Zep实例的URL。",
  "Zep URL": "实例地址",
  "Zep API Key": "API密钥",
  "Query": "查询",
  "Metadata": "元数据",
  "Optional metadata to attach to the message.": "要附加到消息的可选元数据。",
  "API Base Path": "接口路径",
  "Search Scope": "搜索范围",
  "Search Type": "搜索类型",
  "Scope of the search.": "搜索的范围。",
  "Type of search.": "搜索的类型。",
  "Writes a message to Zep.": "向Zep写入消息。",
  "API Key for the Zep instance.": "Zep实例的API密钥。",
  "Query to search for in the chat history.": "要在聊天历史中搜索的查询。",
  "Data to write to Zep.": "要写入Zep的数据。",
  "Limit": "返回限制",
  "Limit of search results.": "搜索结果的返回限制。",
  "Match Text": "匹配文本",
  "True Route": "匹配上则转至",
  "False Route": "未匹配则转至",
  "Create Data": "创建数据",
  "Number of Fields": "字段数",
  "Number of fields to be added to the record.": "要添加到记录中的字段数。",
  "Text Key": "文本字段",
  "Key to be used as text.": "用作文本的字段。",
  "Type key...": "输入字段名",
  "Type a value...": "输入内容",
  "Flow as Tool": "流程工具",
  "Flow Name": "流程名称",
  "The name of the flow to run.": "要运行的流程名称。",
  "The name of the tool.": "工具名称。",
  "The description of the tool.": "工具描述。",
  "Return the result directly from the Tool.": "直接从工具返回结果。",
  "Return Direct": "直接返回",
  "Construct a Tool from a function that runs the loaded Flow.": "通过运行已加载流程构建工具。",
  "The name of the notification.": "通知名称。",
  "The name of the notification to listen for.": "要监听的通知名称。",
  "Generate text using Anthropic Chat&Completion LLMs with prefill support.": "使用Anthropic Chat&Completion LLMs生成文本。",
  "Anthropic API Key": "API密钥",

  "Listen": "监听",
  "A component to listen for a notification.": "用于监听通知的组件。",
  "Notify": "通知",
  "A component to generate a notification to Get Notified component.": "生成通知组件。",
  "Append": "追加",
  "If True, the record will be appended to the notification.": "如果为True，则记录将追加到通知。",
  "Pass": "传递",
  "Forwards the input message, unchanged.": "转发输入消息保持不变。",
  "Input Message": "输入消息",
  "The message to be passed forward.": "要传递的消息。",
  "Ignored Message": "忽略消息",
  "A second message to be ignored. Used as a workaround for continuity.": "要忽略的第二个消息。用作连续性的解决方案。",
  "Output Message": "输出消息",

  "Python Function": "Python函数",
  "Define a Python function.": "定义Python函数。",
  "The code for the function.": "Python函数代码。",
  "A component to run a flow.": "运行流程的组件。",
  "Tweaks to apply to the flow.": "应用到流程的调整。",

  "Runnable Executor": "可运行执行器",
  "Execute a runnable. It will try to guess the input and output keys.": "执行一个可运行器，它将尝试猜测输入和输出关键字。",
  "The key to use for the input.": "用于输入的关键字。",
  "The inputs to pass to the runnable.": "要传递给可运行器的输入。",
  "The runnable to execute.": "要执行的可运行器。",
  "Runnable": "可运行器",
  "The key to use for the output.": "用于输出的关键字。",

  "SQL Executor": "SQL执行器",
  "SQLExecutor": "SQL执行器",
  "SQLGenerator": "SQL生成器",
  "JSONDocumentBuilder": "JSON文档生成器",
  "SQLextractor": "SQL提取器",
  "RunnableExecutor": "可运行执行器",
  "Execute SQL query.": "执行SQL查询。",
  "Database URL": "连接地址",
  "The URL of the database.": "数据库的连接地址。",
  "Include Columns": "包含字段名",
  "Include columns in the result.": "在结果中包含字段名。",
  "Passthrough": "透传",
  "If an error occurs, return the query instead of raising an exception.": "如果发生错误，则返回查询而不是引发异常。",
  "Add Error": "添加错误",
  "Add the error to the result.": "将错误添加到结果。",
  "Add New Variable": "添加新变量",
  "query": "查询语句",
  "IDGenerator": "ID生成器",
  "Sub Flow": "子流程",
  "Dynamically Generates a Component from a Flow. The output is a list of data with keys 'result' and 'message'.": "动态生成流程组件，输出是一个具有'result'和'message'关键字的数据列表。",
  "Get Final Results Only": "仅获取最终结果",
  "If False, the output will contain all outputs from the flow.": "如果为False，则输出将包含流程的所有输出。",

  "Update Data": "更新数据",
  "Update Data with text-based key/value pairs, similar to updating a Python dictionary.": "使用基于文本的键/值对更新数据，类似于更新Python字典。",
  "New Data": "新数据",
  "The record to update.": "更新记录。",
  "The new data to update the record with.": "使用新数据更新记录。",

  "Amazon Kendra Retriever": "Amazon Kendra检索器",
  "Retriever that uses the Amazon Kendra API.": "使用Amazon Kendra API的检索器。",
  "Index ID": "索引ID",
  "Attribute Filter": "属性过滤器",
  "User Context": "用户上下文",

  "Cohere Rerank": "Cohere重排",
  "CohereRerank": "Cohere重排",
  "Rerank documents using the Cohere API and a retriever.": "使用Cohere API和检索器重排文档。",
  "User Agent": "用户代理",
  "Top N": "返回限制",

  "Metal Retriever": "Metal检索器",
  "Retriever that uses the Metal API.": "使用Metal API的检索器。",
  "Client ID": "客户端ID",

  "MultiQueryRetriever": "多查询检索器",
  "Initialize from llm using default template.": "使用缺省模板从LLM初始化。",
  "Parser Key": "分析器主键",

  "Self Query Retriever": "自查询检索器",
  "SelfQueryRetriever": "自查询检索器",
  "Retriever that uses a vector store and an LLM to generate the vector store queries.": "通过向量存储与LLM生成向量存储查询进行检索。",
  "Query to be passed as input.": "使用查询传递输入。",
  "Metadata Field Info": "元数据字段信息",
  "Metadata Field Info to be passed as input.": "使用元数据字段信息传递输入。",
  "Document Content Description": "文档内容描述",
  "Document Content Description to be passed as input.": "使用文档内容描述传递输入。",
  "LLM to be passed as input.": "大模型传递输入。",
  "New component successfully saved!": "新组件已成功保存！",

  "Vectara Self Query Retriever for Vectara Vector Store": "Vectara自查询检索器",
  "Implementation of Vectara Self Query Retriever": "Vectara自查询检索器的实现",
  "Input Vectara Vectore Store": "输入Vectara向量存储",
  "For self query retriever": "用于自查询检索器",
  "Each metadata field info is a string in the form of key value pair dictionary containing additional search metadata.\nExample input: {\"name\":\"speech\",\"description\":\"what name of the speech\",\"type\":\"string or list[string]\"}.\nThe keys should remain constant(name, description, type)": "每个元数据字段信息都是一个字符串，格式为键值对字典，包含额外的搜索元数据。\n示例输入：{\"name\":\"speech\",\"description\":\"what name of the speech\",\"type\":\"string or list[string]\"。\n关键字应保持不变（name, description, type）",

  "VectorStore Retriever": "向量存储检索器",
  "A vector store retriever": "向量存储检索器",
  "VectorStoreRetriever": "向量存储检索器",

  "CharacterTextSplitter": "文本分割器",
  "Splitting text that looks at characters.": "根据字符串进行文本分割。",

  "Language Recursive Text Splitter": "语言递归文本分割器",
  "Split text into chunks of a specified length based on language.": "根据语言将文本分割为指定长度的块。",
  "Separator Type": "分隔符类型",
  "The type of separator to use.": "要使用的分隔符类型。",
  "Separators": "分隔符",
  "The characters to split on.": "要分割的字符串。",

  "Recursive Character Text Splitter": "递归字符文本分割器",
  "Split text into chunks of a specified length.": "将文本分割为指定长度的块。",
  "The characters to split on.\nIf left empty defaults to [\"\\n\\n\", \"\\n\", \" \", \"\"].": "要分割的字符串。\n如果留空，则默认为[\"\\n\\n\", \"\\n\", \" \", \"\"]。",

  "Template": "模板",
  "context": "内容",
  "Text": "文本",
  "user_message": "用户消息",
  "Prompt Message": "提示信息",
  "Language Model": "语言模型",
  "Message": "消息",
  "URLs": "网址",
  "Curl": "命令",
  "Method": "方法",
  "Headers": "请求头",
  "Body": "内容",
  "Query Parameters": "查询参数",
  "Timeout": "请求超时",
  "Input": "输入",
  "Stream": "流式响应",
  "Verbose": "详细输出",
  "Model Name": "模型名称",
  "Base URL": "接口地址",
  "Temperature": "活跃度",
  "Chat History": "会话历史",
  "Messages (Text)": "文本消息",
  "Azure Endpoint": "接口地址",
  "Deployment Name": "部署名称",
  "AgentExecutor": "助手执行器",
  "Error Building Component": "编译组件出错",
  "An unexpected error occurred while building the Component. Please try again.": "构建组件时发生意外错误。请重试。",
  "Get chat inputs from the Playground.": "从沙盒中获取对话输入。",
  "Get text inputs from the Playground.": "从沙盒中获取文本输入。",
  "Display a chat message in the Playground.": "在沙盒中显示对话消息。",
  "Display a text output in the Playground.": "在沙盒中显示文本输出。",
  "Create a prompt template with dynamic variables.": "使用动态变量创建提示模板。",
  "This component allows you to make HTTP requests to one or more URLs. You can provide headers and body as either dictionaries or Data objects. Additionally, you can append query parameters to the URLs.\n\n**Note:** Check advanced options for more settings.": "此组件允许您向一个或多个URL发出HTTP请求。您可以将标头和正文提供为字典或数据对象。此外，您可以将查询参数附加到URL。\n\n**注意：** 查看高级选项以获取更多设置。",
  "Recursively load files from a directory.": "从目录中递归加载文件。",
  "Load Hidden": "加载隐藏文件",
  "Max Concurrency": "最大并发数",
  "Path": "路径",
  "Silent Errors": "静默错误",
  "Use Multithreading": "使用多线程",
  "Types": "类型",
  "Depth": "深度",
  "A generic file loader.": "通用文件加载器。",
  "Supported file types: txt, md, mdx, csv, json, yaml, yml, xml, html, htm, pdf, docx, py, sh, sql, js, ts, tsx": "支持的文件类型：txt、md、mdx、csv、json、yaml、yml、xml、html、htm、pdf、docx、py、sh、sql、js、ts、tsx",
  "Fetch content from one or more URLs.": "从一个或多个URL获取内容。",
  "Defines a webhook input for the flow.": "定义流的回调输入。",
  "Generate text using Amazon Bedrock LLMs.": "使用Amazon Bedrock LLM生成文本。",
  "Model ID": "模型名称",
  "Credentials Profile Name": "凭据配置",
  "Region Name": "区域名称",
  "Endpoint URL": "接口地址",
  "Cache": "缓存",
  "Generate text using Azure OpenAI LLMs.": "使用Azure OpenAI LLM生成文本。",
  "Generate text using Cohere LLMs.": "使用Cohere LLM生成文本。",
  "Cohere API Key": "API密钥",
  "Generate text using Google Generative AI.": "使用Google Generative AI生成文本。",
  "Max Output Tokens": "最大输出令牌数",
  "Model": "模型名称",
  "Google API Key": "API密钥",
  "Generate text using Groq.": "使用Groq生成文本。",
  "Groq API Key": "API密钥",
  "Generate text using Hugging Face Inference APIs.": "使用Hugging Face推理API生成文本。",
  "Task": "任务",
  "API Token": "API令牌",
  "Generates text using MistralAI LLMs.": "使用MistralAI LLM生成文本。",
  "Mistral API Key": "API密钥",
  "Generate text using Ollama Local LLMs.": "使用羊驼Ollama本地LLM生成文本。",
  "Generates text using OpenAI LLMs.": "使用OpenAI LLM生成文本。",
  "OpenAI API Key": "API密钥",
  "Generate text using Baidu Qianfan LLMs.": "使用百度千帆LLM生成文本。",
  "Qianfan Ak": "API密钥",
  "Qianfan Sk": "安全密钥",
  "Endpoint": "接口地址",
  "Generate text using Vertex AI LLMs.": "使用Vertex AI LLM生成文本。",
  "Project": "项目",
  "Retrieves stored chat messages.": "检索存储的对话消息。",
  "Concatenate two text sources into a single text chunk using a specified delimiter.": "使用指定的分隔符将两个文本源连接成一个文本块。",
  "First Text": "第一个文本",
  "Second Text": "第二个文本",
  "Delimiter": "分隔符",
  "Combined Text": "合并文本",
  "Create List": "创建列表",
  "Creates a list of texts.": "创建文本列表。",
  "Texts": "文本列表",
  "Enter one or more texts.": "输入一个或多个文本。",
  "Data List": "数据列表",
  "Use as a template to create your own component.": "用作模板以创建您自己的组件。",
  "Input Value": "输入内容",
  "Output": "输出",
  "Filters a Data object based on a list of keys.": "根据键列表过滤数据对象。",
  "Filter Criteria": "过滤条件",
  "Filtered Data": "过滤后的数据",
  "Generates a unique ID.": "生成唯一ID。",
  "Combines multiple data sources into a single unified Data object.": "将多个数据源合并为一个统一的数据对象。",
  "Convert Data into plain text following a specified template.": "按照指定的模板将数据转换为纯文本。",
  "Split text into chunks based on specified criteria.": "根据指定的条件将文本拆分为块。",
  "Data Inputs": "数据输入",
  "Chunk Overlap": "块重叠",
  "Chunk Size": "块大小",
  "Separator": "分隔符",
  "Chunks": "文本块",
  "Stores a chat message or text.": "存储对话消息或文本。",
  "The chat message to be stored": "要存储的对话消息",
  "Session ID": "会话ID",
  "The session ID of the chat." : "对话的会话ID。",
  "Stored Messages": "已存储消息",

  "Metaphor": "Metaphor工具",
  "Metaphor Toolkit": "Metaphor工具包",
  "Metaphor API Key": "API密钥",
  "search_num_results": "返回结果数",
  "similar_num_results": "相似结果数",
  "use_autoprompt": "自动提示",
  "Tool": "工具",
  "BaseToolkit": "基础工具包",

  "OpenAPIToolkit": "OpenAPI工具包",
  "Toolkit for interacting with an OpenAPI API.": "用于与OpenAPI API交互的工具包。",
  "JSON Agent": "JSON助手",
  "Text Requests Wrapper": "文本请求包装器",
  "llm": "大模型",
  "path": "路径",
  "allow_dangerous_requests": "是否允许危险请求",

  "VectorStoreRouterToolkit": "向量存储路由工具包",
  "Toolkit for routing between Vector Stores.": "用于在向量存储之间路由的工具包。",

  "VectorStoreToolkit": "向量存储工具包",
  "Toolkit for interacting with a Vector Store.": "用于与向量存储交互的工具包。",

  "Python REPL Tool": "Python交互式运行工具",
  "A tool for running Python code in a REPL environment.": "在交互式解释器环境中运行Python代码的工具。",
  "A description of the tool.": "工具描述。",
  "A list of modules to import globally, e.g. ['math', 'numpy'].": "要全局导入的模块列表，例如['math', 'numpy']。",
  "Global Imports": "全局导入",

  "PythonCodeTool": "Python代码工具",
  "structuredtool dataclass code to tool": "结构化数据类代码工具",
  "Tool Code": "工具代码",
  "Enter the dataclass code.": "输入数据类代码。",
  "Tool Name": "工具名称",
  "Enter the name of the tool.": "输入工具名称。",
  "Provide a brief description of what the tool does.": "提供工具的简要描述。",
  "Return Directly": "直接返回",
  "Should the tool return the function output directly?": "工具是否应直接返回函数输出？",
  "Tool Function": "工具函数",
  "Select the function for additional expressions.": "选择函数以获取更多表达式。",
  "Tool Class": "工具类",
  "Select the class for additional expressions.": "选择类以获取更多表达式。",

  "RetrieverTool": "检索器工具",
  "Tool for interacting with retriever": "用于与检索器交互的工具",
  "Retriever to interact with": "要交互的检索器",
  "Name of the tool": "工具名称",
  "Description of the tool": "工具描述",

  "SearchApi Tool": "SearchApi工具",

  "Discover More": "探索更多",

  "VectorStoreInfo": "向量存储信息",
  "Information about a VectorStore": "关于向量存储的信息",
  "VectorStore": "向量存储",
  "Sender Type": "发送者类型",
  "Sender Name": "发送者名称",
  "ToolCallingAgent": "工具调用助手",
  "ConditionalRouter": "条件路由",
  "CombineText": "合并文本",
  "ParseData": "数据解析",
  "StoreMessage": "消息存储",
  "Data Template": "数据模板",
  "RunFlow": "运行流程",
  "SubFlow": "子流程",
  "UpdateData": "更新数据",
  "CreateData": "创建数据",
  "SplitText": "文本分割",
  "CreateList": "创建列表",
  "MergeData": "数据合并",
  "CustomComponent": "自定义组件",
  "Examples": "示例",
  "Location": "位置",

  "Files": "文件"
}
