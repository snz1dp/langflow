"use strict";(self.webpackChunklangflow_docs=self.webpackChunklangflow_docs||[]).push([[3794],{7533:(e,t,n)=>{n.d(t,{A:()=>r});var s=n(6540),o=n(1122),i=n(6025),a=n(4848);const r=e=>{let{alt:t,sources:n,style:r}=e;const[c,l]=(0,s.useState)(!1),d=e=>{"Escape"===e.key&&l(!1)};(0,s.useEffect)((()=>(c?document.addEventListener("keydown",d):document.removeEventListener("keydown",d),()=>{document.removeEventListener("keydown",d)})),[c]);return(0,a.jsx)("div",{className:"zoomable-image "+(c?"fullscreen":""),onClick:()=>{l(!c)},style:{width:"50%",margin:"0 auto",display:"flex",justifyContent:"center",...r},children:(0,a.jsx)(o.A,{className:"zoomable-image-inner",alt:t,sources:{light:(0,i.Ay)(n.light),dark:(0,i.Ay)(n.dark)}})})}},9730:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>m,contentTitle:()=>l,default:()=>x,frontMatter:()=>c,metadata:()=>d,toc:()=>p});n(6540);var s=n(4848),o=n(8453),i=(n(1122),n(6025),n(7533),n(3554)),a=n.n(i),r=n(7293);const c={},l="Combine Text",d={id:"examples/combine-text",title:"Combine Text",description:"This page may contain outdated information. It will be updated as soon as possible.",source:"@site/docs/examples/combine-text.mdx",sourceDirName:"examples",slug:"/examples/combine-text",permalink:"/examples/combine-text",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{}},m={},p=[];function u(e){const t=Object.assign({h1:"h1",p:"p",strong:"strong"},(0,o.RP)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"combine-text",children:"Combine Text"}),"\n",(0,s.jsx)(r.A,{type:"warning",title:"warning",children:(0,s.jsx)(t.p,{children:"This page may contain outdated information. It will be updated as soon as possible."})}),"\n",(0,s.jsx)(t.p,{children:"With LLM pipelines, combining text from different sources may be as important as splitting text."}),"\n",(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)(t.strong,{children:"Combine Text"})," component concatenates two text inputs into a single chunk using a specified delimiter, such as whitespace or a newline."]}),"\n",(0,s.jsxs)(t.p,{children:["Also, check out ",(0,s.jsx)(t.strong,{children:"Combine Texts (Unsorted)"})," as a similar alternative."]}),"\n",(0,s.jsxs)(t.p,{children:["This component is available under the ",(0,s.jsx)(t.strong,{children:"Helpers"})," tab of the Langflow sidebar."]}),"\n",(0,s.jsx)("div",{style:{marginBottom:"20px",display:"flex",justifyContent:"center"},children:(0,s.jsx)(a(),{playing:!0,controls:!0,url:"/videos/combine_text.mp4"})})]})}const x=function(e={}){const{wrapper:t}=Object.assign({},(0,o.RP)(),e.components);return t?(0,s.jsx)(t,Object.assign({},e,{children:(0,s.jsx)(u,e)})):u(e)}},8453:(e,t,n)=>{n.d(t,{RP:()=>i,xA:()=>r});var s=n(6540);const o=s.createContext({});function i(e){const t=s.useContext(o);return s.useMemo((()=>"function"==typeof e?e(t):{...t,...e}),[t,e])}const a={};function r({components:e,children:t,disableParentContext:n}){let r;return r=n?"function"==typeof e?e({}):e||a:i(e),s.createElement(o.Provider,{value:r},t)}}}]);